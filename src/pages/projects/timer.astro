---
import ProjectLayout from "@/layouts/ProjectLayout.astro";
---

<ProjectLayout
  title="Timer"
  description="A simple timer app built with JavaScript."
>
  <div class="timer">
    <h1>Timer</h1>
    <div id="timerClock">
      <input id="minutesBox" type="number" value="1" min="0" max="10" step="1" />
      <span id="separator">:</span>
      <input id="secondsBox" type="number" value="15" min="0" max="59" step="1" /><br />
      <span id="minLabel">Minutes</span> <span id="secLabel">Seconds</span>
      <button id="runPauseButton">RUN</button>
      <button id="resetButton">RESET</button>
    </div>
  </div>
</ProjectLayout>

<script is:inline>
class Timer {
    constructor(minutesInput, secondsInput) {
        this.minutesInput = minutesInput;
        this.secondsInput = secondsInput;
        this.intervalId = null;
        this.minutes = parseInt(this.minutesInput.value, 10);
        this.seconds = parseInt(this.secondsInput.value, 10);
        this.setupListeners();
    }

    startPause() {
        if (this.intervalId) {
            clearInterval(this.intervalId);
            this.intervalId = null;
            document.getElementById("runPauseButton").textContent = "RUN";
        } else {
            this.intervalId = setInterval(() => this.countdown(), 1000);
            document.getElementById("runPauseButton").textContent = "PAUSE";
        }
    }

    countdown() {
        if (this.seconds > 0) {
            this.seconds--;
        } else if (this.minutes > 0) {
            this.minutes--;
            this.seconds = 59;
        } else {
            clearInterval(this.intervalId);
            this.intervalId = null;
            document.getElementById("runPauseButton").textContent = "RUN";
        }
        this.updateDisplay();
    }

    reset() {
        clearInterval(this.intervalId);
        this.intervalId = null;
        this.minutes = parseInt(this.minutesInput.value, 10);
        this.seconds = parseInt(this.secondsInput.value, 10);
        this.updateDisplay();
        document.getElementById("runPauseButton").textContent = "RUN";
    }

    updateDisplay() {
        this.minutesInput.value = this.minutes;
        this.secondsInput.value = this.seconds;
    }

    setupListeners() {
        this.minutesInput.addEventListener("change", () => {
            this.minutes = parseInt(this.minutesInput.value, 10);
        });

        this.secondsInput.addEventListener("change", () => {
            this.seconds = parseInt(this.secondsInput.value, 10);
        });

        document.getElementById("runPauseButton").addEventListener("click", () => this.startPause());
        document.getElementById("resetButton").addEventListener("click", () => this.reset());
    }
}

// Initialize the timer
document.addEventListener("DOMContentLoaded", () => {
    new Timer(
        document.getElementById("minutesBox"),
        document.getElementById("secondsBox")
    );
});
</script>

<style>
#timerClock {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    width: 300px;
    margin: auto;
}

#minutesBox, #secondsBox {
    font-size: 2.5em;
    width: 80px;
    text-align: center;
    padding: 5px;
    background-color: black;
    color: #F0F4B6;
    border: 2px solid #F0F4B6;
    border-radius: 5px;
}

#separator {
    font-size: 2.5em;
}

#minLabel, #secLabel {
    font-size: 1em;
    margin-top: 5px;
}

button {
    padding: 10px 15px;
    font-size: 1em;
    cursor: pointer;
    background-color: #387c3b;
    color: white;
    border: none;
    border-radius: 5px;
    transition: background 0.2s ease;
}

button:hover {
    background-color: #2f622f;
}

button:active {
    transform: scale(0.95);
}
</style>
