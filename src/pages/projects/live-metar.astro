---
import ProjectLayout from "../../layouts/ProjectLayout.astro";

const apiKey = import.meta.env.PUBLIC_AVWX_API_KEY;
const airports = ["KBEH", "KMDW", "KSBN", "KORD"];

async function fetchMetar(airport: string) {
  try {
    const response = await fetch(`https://avwx.rest/api/metar/${airport}`, {
      method: "GET",
      headers: {
        "Authorization": `BEARER ${apiKey}`,
        "Content-Type": "application/json"
      }
    });

    if (!response.ok) throw new Error(`Failed to fetch METAR for ${airport}`);

    const data = await response.json();
    return { airport, metar: data.raw || "No METAR available" };
  } catch (error) {
    return { airport, metar: "Error fetching data" };
  }
}

const metarData = await Promise.all(airports.map(fetchMetar));
---

<ProjectLayout title="Live METAR Data">
  <h1 class="centered">METAR Data for Multiple Airports</h1>
  <div class="callout info">
    <p>
      <strong>Info:</strong> The table below shows the latest METAR data for selected airports.
      This data is refreshed every hour.
    </p>
  </div>

  <table class="live-metar">
    <thead>
      <tr>
        <th class="top-text">Airport</th>
        <th class="top-text">METAR</th>
      </tr>
    </thead>
    <tbody>
      {metarData.map(({ airport, metar }) => (
        <tr>
          <td>{airport}</td>
          <td>{metar}</td>
        </tr>
      ))}
    </tbody>
  </table>
</ProjectLayout>
